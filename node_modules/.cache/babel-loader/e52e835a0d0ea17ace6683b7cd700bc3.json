{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/Programming/React/done_app/src/components/DayPicker/DayPicker.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './DayPicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DayPicker(props) {\n  const {\n    className\n  } = props; // TODO:\n  // - Integrate a react-calendar library (don't forget to import it's CSS)\n  // - Lift the state containing picked day up via props\n  // - Use `tileClassName` prop to set certain class name if day has a prop and other class name if it doesn't\n  // Class name tips:\n  // - day-picker\n  // - day-picker__day--non-empty\n  // - day-picker__day--empty\n\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    className: classNames('day-picker', className),\n    value: selectedDay,\n    onChange: selectDay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = DayPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayPicker\");","map":{"version":3,"sources":["/Users/dave/Documents/Programming/React/done_app/src/components/DayPicker/DayPicker.tsx"],"names":["React","classNames","Calendar","DayPicker","props","className","selectedDay","selectDay"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,kCAAP;AACA,OAAO,iBAAP;;AAOA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB,CAD+C,CAG/C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,QAAD;AACE,IAAA,SAAS,EAAEH,UAAU,CAAC,YAAD,EAAeI,SAAf,CADvB;AAEE,IAAA,KAAK,EAAEC,WAFT;AAGE,IAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KApBeJ,S","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\nimport Calendar from 'react-calendar'\n\nimport 'react-calendar/dist/Calendar.css'\nimport './DayPicker.css'\n\nexport interface DayPickerProps {\n  className?: string\n  selectedDa\n}\n\nexport function DayPicker(props: DayPickerProps) {\n  const { className } = props\n\n  // TODO:\n  // - Integrate a react-calendar library (don't forget to import it's CSS)\n  // - Lift the state containing picked day up via props\n  // - Use `tileClassName` prop to set certain class name if day has a prop and other class name if it doesn't\n\n  // Class name tips:\n  // - day-picker\n  // - day-picker__day--non-empty\n  // - day-picker__day--empty\n\n  return (\n    <Calendar \n      className={classNames('day-picker', className)}\n      value={selectedDay}\n      onChange={selectDay}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}